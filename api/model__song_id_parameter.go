/*
Magical Playlist Sorter API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package faelist.com/sorterv1

import (
	"encoding/json"
)

// checks if the SongIDParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SongIDParameter{}

// SongIDParameter struct for SongIDParameter
type SongIDParameter struct {
	SpotSongID *string `json:"SpotSongID,omitempty"`
	ApplSongID *int32 `json:"ApplSongID,omitempty"`
	YTMSongID *string `json:"YTMSongID,omitempty"`
}

// NewSongIDParameter instantiates a new SongIDParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSongIDParameter() *SongIDParameter {
	this := SongIDParameter{}
	return &this
}

// NewSongIDParameterWithDefaults instantiates a new SongIDParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSongIDParameterWithDefaults() *SongIDParameter {
	this := SongIDParameter{}
	return &this
}

// GetSpotSongID returns the SpotSongID field value if set, zero value otherwise.
func (o *SongIDParameter) GetSpotSongID() string {
	if o == nil || IsNil(o.SpotSongID) {
		var ret string
		return ret
	}
	return *o.SpotSongID
}

// GetSpotSongIDOk returns a tuple with the SpotSongID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SongIDParameter) GetSpotSongIDOk() (*string, bool) {
	if o == nil || IsNil(o.SpotSongID) {
		return nil, false
	}
	return o.SpotSongID, true
}

// HasSpotSongID returns a boolean if a field has been set.
func (o *SongIDParameter) HasSpotSongID() bool {
	if o != nil && !IsNil(o.SpotSongID) {
		return true
	}

	return false
}

// SetSpotSongID gets a reference to the given string and assigns it to the SpotSongID field.
func (o *SongIDParameter) SetSpotSongID(v string) {
	o.SpotSongID = &v
}

// GetApplSongID returns the ApplSongID field value if set, zero value otherwise.
func (o *SongIDParameter) GetApplSongID() int32 {
	if o == nil || IsNil(o.ApplSongID) {
		var ret int32
		return ret
	}
	return *o.ApplSongID
}

// GetApplSongIDOk returns a tuple with the ApplSongID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SongIDParameter) GetApplSongIDOk() (*int32, bool) {
	if o == nil || IsNil(o.ApplSongID) {
		return nil, false
	}
	return o.ApplSongID, true
}

// HasApplSongID returns a boolean if a field has been set.
func (o *SongIDParameter) HasApplSongID() bool {
	if o != nil && !IsNil(o.ApplSongID) {
		return true
	}

	return false
}

// SetApplSongID gets a reference to the given int32 and assigns it to the ApplSongID field.
func (o *SongIDParameter) SetApplSongID(v int32) {
	o.ApplSongID = &v
}

// GetYTMSongID returns the YTMSongID field value if set, zero value otherwise.
func (o *SongIDParameter) GetYTMSongID() string {
	if o == nil || IsNil(o.YTMSongID) {
		var ret string
		return ret
	}
	return *o.YTMSongID
}

// GetYTMSongIDOk returns a tuple with the YTMSongID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SongIDParameter) GetYTMSongIDOk() (*string, bool) {
	if o == nil || IsNil(o.YTMSongID) {
		return nil, false
	}
	return o.YTMSongID, true
}

// HasYTMSongID returns a boolean if a field has been set.
func (o *SongIDParameter) HasYTMSongID() bool {
	if o != nil && !IsNil(o.YTMSongID) {
		return true
	}

	return false
}

// SetYTMSongID gets a reference to the given string and assigns it to the YTMSongID field.
func (o *SongIDParameter) SetYTMSongID(v string) {
	o.YTMSongID = &v
}

func (o SongIDParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SongIDParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpotSongID) {
		toSerialize["SpotSongID"] = o.SpotSongID
	}
	if !IsNil(o.ApplSongID) {
		toSerialize["ApplSongID"] = o.ApplSongID
	}
	if !IsNil(o.YTMSongID) {
		toSerialize["YTMSongID"] = o.YTMSongID
	}
	return toSerialize, nil
}

type NullableSongIDParameter struct {
	value *SongIDParameter
	isSet bool
}

func (v NullableSongIDParameter) Get() *SongIDParameter {
	return v.value
}

func (v *NullableSongIDParameter) Set(val *SongIDParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableSongIDParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableSongIDParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSongIDParameter(val *SongIDParameter) *NullableSongIDParameter {
	return &NullableSongIDParameter{value: val, isSet: true}
}

func (v NullableSongIDParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSongIDParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


